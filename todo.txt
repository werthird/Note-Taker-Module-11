no front end - just back-end code

ToDo
- Build backend
- Connect to frontend
- Deploy on Heroku
 

User Story
GIVEN a note-taking application
WHEN I open the Note Taker
THEN I am presented with a landing page with a link to a notes page
WHEN I click on the link to the notes page
THEN I am presented with a page with existing notes listed in the left-hand column, plus empty fields to enter a new note title and the note’s text in the right-hand column
WHEN I enter a new note title and the note’s text
THEN a Save icon appears in the navigation at the top of the page
WHEN I click on the Save icon
THEN the new note I have entered is saved and appears in the left-hand column with the other existing notes
WHEN I click on an existing note in the list in the left-hand column
THEN that note appears in the right-hand column
WHEN I click on the Write icon in the navigation at the top of the page
THEN I am presented with empty fields to enter a new note title and the note’s text in the right-hand column
 

Task List
- Make a db.json file
- Store and retrieve notes using the fs module from the db.json
- Make GET/notes route to return the notes.html file
- Make GET/* route to return the index.html file
- Make GET/api/notes to return db.json and return all saved notes as JSON
- Make POST/api/notes to receive new note to save on the request body, add it to db.json, then return new note to client.
- Learn how to give each new note a unique id when saved(npm packages that could do this for us)
- Make DELETE/api/notes/:id route. DELETE /api/notes/:id should receive a query parameter that contains the id of a note to delete. To delete a note, you'll need to read all notes from the db.json file, remove the note with the given id property, and then rewrite the notes to the db.json file.





